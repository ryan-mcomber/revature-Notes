package com.revature.repositories;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.revature.models.Account;
import com.revature.util.ConnectionUtil;

public class AccountDao implements IAccountDao{

	private static Logger log = Logger.getLogger(AccountDao.class);
	
	@Override
	public List<Account> findAll() { // here we have to make an actual query
		
		// start out with an empty arraylist of accounts
		ArrayList<Account> accounts = new ArrayList<Account>();
		try (// obtain a connection, surround with try
		 Connection conn = ConnectionUtil.getConnection()) {
			// create a statement + a sql string to pass through and execute against DBV
			String sql = "SELECT * FROM ryanm.accounts";
			Statement stmt = conn.createStatement();
			ResultSet rs= stmt.executeQuery(sql);
			// send statement to DB
			// iterate through the response while(rs.next())
			while(rs.next()) {
				
					// for each row grab the data of that account
					int id = rs.getInt("id"); // you can specify the column number OR you can specify the column name
					double balance = rs.getDouble("balance");
					
					// construct account object
					Account a = new Account(id,balance);
					
					// add the account object to the list
					accounts.add(a);
			}			
		} catch (SQLException e) { // catch a sql error if necessary 
			log.warn("A SQL exception occured when querying all acoounts.");
			e.printStackTrace();
		}

		//return the account list
		
		return accounts;
	}

	@Override
	public int insert(Account a) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Account findById(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Account> findByOwner(int userId) {
		List<Account> ownedAccounts = new ArrayList<Account>();
		
		try( Connection conn = ConnectionUtil.getConnection()){
			String sql = ""; //this will have to be a joins statement
			PreparedStatement stmt = conn.prepareStatement(sql);
		} catch (SQLException e) {
			log.warn("Failed to retrieve all account owned by user with id: " + userId);
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public boolean update(Account a) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean delete(int id) {
		// TODO Auto-generated method stub
		return false;
	}

	
	
	
	
	
}
