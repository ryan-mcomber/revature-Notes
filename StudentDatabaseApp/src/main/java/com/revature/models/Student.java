package com.revature.models;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Student {
	
	private static Scanner scan = new Scanner(System.in);
	private static int globalId = 1000; // everytime a student is instantiated I will increase this by 1.
	
	// firstname
	// lastname
	// gradeYear
	// studentId 
	// List of Courses
	// tuition balance
	private String firstName;
	private String lastName;
	private int gradeYear; // 1 - Freshman , 2- Sophomore 
	private String studentId; // we are concatenating the grade year to an autogenerated id
	private List<Course> courses = new ArrayList<Course>();
	
	// here we are declaring a DYNAMIC datastrcuture and inferring generics.
	// ArrayLists allow we to add and remove with ease
	private double tuitionBalance = 0;

	public Student(String firstName, String lastName, int gradeYear) {
		super();
		this.firstName = firstName;
		this.lastName = lastName;
		this.gradeYear = gradeYear;
		
		setStudentId();
		
		System.out.println(firstName + " " + lastName + " " + gradeYear + " " + studentId);
		
	}
	
	
	// setStudentId() gradeYear concatenated static id  field
	private void setStudentId() { 
		globalId++;
		this.studentId = gradeYear + "" + globalId; // necessary to SMUSH the ints together, not return as string
		
	}
	
	// enroll()
	public void enroll() {
		
		List<Course> coursesToAdd = new ArrayList<Course>();
		
		boolean isDone = false;
		
		while(!isDone) {
			
			System.out.println("Enter a course to enroll in: ");
			
			String courseName = scan.next();
			
			// if the user presses q to quit, we quit out of the loop..
			if (!courseName.equalsIgnoreCase("q")) {
				
				Course newCourse = new Course(courseName);
				
				coursesToAdd.add(newCourse);
				tuitionBalance += Course.costOfCourse;
				
				scan.nextLine();	
				
			} else {
				
				// if they hit q....
				System.out.println("===== quitting ========");
				isDone = true;				
			}

		}
	
		courses = coursesToAdd;
		
		System.out.println("ENROLLED IN: " + courses.toString());
		
		
	}
	
	
	
	
	public void viewBalance() {
		System.out.println("Your balance is $" + tuitionBalance);
	}
	
	public void payTuition() {
		
		viewBalance();
		
		System.out.println("Enter your payment amount: ");
		
		double payment = scan.nextDouble();
		tuitionBalance -= payment;
		
		System.out.println("Thank you for your payment of " + payment);
		
		viewBalance();
		
	}
	
	
	// showStatus()
	public void showStatus() {
		
		System.out.println("\nName: " + firstName + " " + lastName + "\nStudent ID: " + studentId
				
				+ "\nCourses enrolled in: " + courses.toString() + "\nTuition: " + tuitionBalance);
		
	}


	public String getStudentId() {
		return studentId;
	}

	
	
	
	
	

}
